{
	"component constructor": {
		"prefix": ["constructor"],
		"body": [
			"constructor(props) {",
			"\tsuper(props)",
			"",
			"\tthis.state = {",
			"\t\t$0",
			"\t}",
			"",
			"\tthis.handleEvent = this.handleEvent.bind(this)",
			"}",
			""
		],
		"description": "The constructor for a React component is called before it is mounted.\n"
	},
	"componentDidMount": {
		"prefix": ["cdm", "lifecycle.componentDidMount"],
		"body": ["componentDidMount() {", "\t$1", "}", "", "$0"],
		"description": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.\n"
	},
	"componentDidUpdate": {
		"prefix": ["cdu", "lifecycle.componentDidUpdate"],
		"body": [
			"componentDidUpdate(prevProps, prevState) {",
			"\tif (prevState.${1:propertyName} !== this.state.${1:propertyName}) {",
			"\t\t${1:this.handler()}",
			"\t}",
			"",
			"$0}",
			""
		],
		"description": "Invoked immediately after the component's updates are flushed to the DOM.\n"
	},
	"componentWillUnmount": {
		"prefix": ["cwu", "lifecycle.componentWillUnmount"],
		"body": ["componentWillUnmount() {", "\t$1", "}", "", "$0"],
		"description": "Invoked immediately before a component is unmounted from the DOM.\n"
	},
	"component render": {
		"prefix": ["render", "lifecycle.componentRender"],
		"body": ["render() {", "\treturn (", "\t\t<>", "\t\t\t$0", "\t\t</>", "\t)", "}"],
		"description": "React Class Component basic render.\n"
	},
	"static getDerivedStateFromProps": {
		"prefix": ["gdsfp", "lifecycle.getDerivedStateFromProps"],
		"body": [
			"static getDerivedStateFromProps(nextProps, prevState) { // Rarely Used",
			"\t$1",
			"}",
			"$0",
			""
		],
		"description": "Invoked right before calling the render method, both on the initial mount and on subsequent updates.\n"
	},
	"static getDerivedStateFromError": {
		"prefix": ["gdsfe", "lifecycle.getDerivedStateFromError"],
		"body": [
			"static getDerivedStateFromError(error) { // Rarely Used",
			"\treturn { hasError: true }",
			"}",
			"$0",
			""
		],
		"description": "This lifecycle is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.\n"
	},
	"shouldComponentUpdate": {
		"prefix": ["scu", "lifecycle.shouldComponentUpdate"],
		"body": [
			"shouldComponentUpdate(nextProps, nextState, nextContext) { // Rarely Used",
			"\t$1",
			"}",
			"",
			"$0"
		],
		"description": "Invoked before rendering when new props or state are being received. \n"
	},
	"getSnapshotBeforeUpdate": {
		"prefix": ["gsbu", "lifecycle.getSnapshotBeforeUpdate"],
		"body": [
			"getSnapshotBeforeUpdate(prevProps, prevState) { // Rarely Used",
			"\t$0",
			"}",
			"",
			"$1"
		],
		"description": "Called right before mutations are made (e.g. before the DOM is updated)\n"
	},
	"UNSAFE_componentWillMount": {
		"prefix": ["cwm", "lifecycle.UNSAFE_componentWillMount"],
		"body": ["UNSAFE_componentWillMount() { // Legacy", "\t$1", "}", "", "$0"],
		"description": "DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs\n"
	},
	"UNSAFE_componentWillReceiveProps": {
		"prefix": ["cwrp", "lifecycle.UNSAFE_componentWillReceiveProps"],
		"body": [
			"UNSAFE_componentWillReceiveProps(nextProps, nextContext) { // Legacy",
			"\t$1",
			"}",
			"",
			"$0"
		],
		"description": "DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.\n"
	},
	"UNSAFE_componentWillUpdate": {
		"prefix": ["cwup", "lifecycle.UNSAFE_componentWillUpdate"],
		"body": [
			"UNSAFE_componentWillUpdate(nextProps, nextState, nextContext) { // Legacy",
			"\t$1",
			"}",
			"",
			"$0"
		],
		"description": "DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.\n"
	}
}
